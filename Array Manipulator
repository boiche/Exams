using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _02.Array_Manipulator
{
    class Program
    {
        static void Main(string[] args)
        {
            List<int> toManipulate = Console.ReadLine().Split(' ').Select(int.Parse).ToList();
            List<string> output = new List<string>();
            string[] command;
            while (true)
            {
                command = Console.ReadLine().Split(' ').ToArray();
                if (command[0].Equals("end")) break;
                else
                {
                    if (command[0].Equals("exchange"))
                    {
                        int index = Convert.ToInt32(command[1]);
                        if (index >= toManipulate.Count || index < 0) output.Add("Invalid index");
                        else
                        {
                            if (index < toManipulate.Count) 
                            {
                                index++;
                                List<int> toExchange = toManipulate.GetRange(0, index).ToList();
                                toManipulate.RemoveRange(0, index);
                                for (int i = 0; i < toExchange.Count; i++)
                                {
                                    toManipulate.Add(toExchange[i]);
                                }
                            }
             
                            
                            //Console.WriteLine(string.Join(" ", toManipulate));
                        }
                    }
                    else if (command[0].Equals("max"))
                    {
                        string get = command[1];
                        if (get.Equals("odd"))
                        {
                            int index = 0;
                            if (toManipulate.Count(x => x % 2 == 1) > 0)
                            {
                                int max = toManipulate.Where(x => x % 2 == 1).Max(x => x);
                                for (int i = 0; i < toManipulate.Count; i++)
                                {
                                    if (toManipulate[i].Equals(max)) index = i;
                                }

                                output.Add(index.ToString());
                            }
                            else output.Add("No matches");
                        }
                        else
                        {
                            int index = 0;
                            if (toManipulate.Count(x => x % 2 == 0) > 0)
                            {
                                int max = toManipulate.Where(x => x % 2 == 0).Max(x => x);
                                for (int i = 0; i < toManipulate.Count; i++)
                                {
                                    if (toManipulate[i].Equals(max)) index = i;
                                }

                                output.Add(index.ToString());
                            }
                            else output.Add("No matches");
                        }
                    }
                    else if (command[0].Equals("min"))
                    {
                        if (command[1].Equals("odd"))
                        {
                            int index = 0;
                            if (toManipulate.Count(x => x % 2 == 1) > 0)
                            {
                                int min = toManipulate.Where(x => x % 2 == 1).Min(x => x);
                                for (int i = 0; i < toManipulate.Count; i++)
                                {
                                    if (toManipulate[i].Equals(min)) index = i;
                                }

                                output.Add(index.ToString());
                            }
                            else output.Add("No matches");
                        }
                        else
                        {
                            int index = 0;
                            if (toManipulate.Count(x => x % 2 == 0) > 0)
                            {
                                int min = toManipulate.Where(x => x % 2 == 0).Min(x => x);
                                for (int i = 0; i < toManipulate.Count; i++)
                                {
                                    if (toManipulate[i].Equals(min)) index = i;
                                }

                                output.Add(index.ToString());
                            }
                            else output.Add("No matches");
                        }
                    }
                    else if (command[0].Equals("first"))
                    {
                        int count = Convert.ToInt32(command[1]);
                        string type = command[2];
                        List<int> numbers = new List<int>();
                        if (type.Equals("odd"))
                        {
                            if (count > toManipulate.Count) output.Add("Invalid count");
                            else
                            {
                                for (int i = 0; i < toManipulate.Count; i++)
                                {
                                    if (toManipulate[i] % 2 == 1)
                                    {
                                        numbers.Add(toManipulate[i]);
                                    }
                                }
                                if (toManipulate.Count == 0) output.Add("[]");
                                else output.Add("[" + string.Join(", ", numbers.Take(count)) + "]");
                                numbers.Clear();
                            }
                        }
                        else
                        {
                            if (count > toManipulate.Count) output.Add("Invalid count");
                            else
                            {
                                for (int i = 0; i < toManipulate.Count; i++)
                                {
                                    if (toManipulate[i] % 2 == 0)
                                    {
                                        numbers.Add(toManipulate[i]);
                                        if (numbers.Count.Equals(count)) break;
                                    }
                                }
                                if (toManipulate.Count == 0) output.Add("[]");
                                else output.Add("[" + string.Join(", ", numbers.Take(count)) + "]");
                                numbers.Clear();
                            }
                        }
                    }
                    else if (command[0].Equals("last"))
                    {
                        int count = Convert.ToInt32(command[1]);
                        string type = command[2];
                        List<int> numbers = new List<int>();
                        if (type.Equals("odd"))
                        {
                            if (count > toManipulate.Count) output.Add("Invalid count");
                            else
                            {
                                for (int i = toManipulate.Count - 1; i >= 0; i--)
                                {
                                    if (toManipulate[i] % 2 == 1)
                                    {
                                        numbers.Add(toManipulate[i]);
                                        if (numbers.Count.Equals(count)) break;
                                    }
                                }
                                numbers.Reverse();
                                if (numbers.Count == 0) output.Add("[]");
                                else output.Add("[" + string.Join(", ", numbers) + "]");
                                numbers.Clear();
                            }
                        }
                        else
                        {
                            if (count > toManipulate.Count) output.Add("Invalid count");
                            else
                            {
                                for (int i = toManipulate.Count - 1; i >= 0; i--)
                                {
                                    if (toManipulate[i] % 2 == 0)
                                    {
                                        numbers.Add(toManipulate[i]);
                                        if (numbers.Count.Equals(count)) break;
                                    }
                                }
                                numbers.Reverse();
                                if (numbers.Count == 0) output.Add("[]");
                                else output.Add("[" + string.Join(", ", numbers) + "]");
                                numbers.Clear();
                            }
                        }
                    }
                }
            }
            foreach (string message in output)
            {
                Console.WriteLine(message);
            }
            Console.WriteLine("[" + string.Join(", ", toManipulate) + "]");
            Console.ReadLine();
        }
    }
}
